{"version":3,"file":"static/js/470.23cb6d76.chunk.js","mappings":"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","sources":["components/NoRowIcon.js","components/Pagination.js","pages/products/Schema.js","pages/products/AddProduct.js","pages/products/DeleteProduct.js","pages/products/Products.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst StyledGridOverlay = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  height: \"100%\",\r\n  \"& .ant-empty-img-1\": {\r\n    fill: theme.palette.mode === \"light\" ? \"#aeb8c2\" : \"#262626\",\r\n  },\r\n  \"& .ant-empty-img-2\": {\r\n    fill: theme.palette.mode === \"light\" ? \"#f5f5f7\" : \"#595959\",\r\n  },\r\n  \"& .ant-empty-img-3\": {\r\n    fill: theme.palette.mode === \"light\" ? \"#dce0e6\" : \"#434343\",\r\n  },\r\n  \"& .ant-empty-img-4\": {\r\n    fill: theme.palette.mode === \"light\" ? \"#fff\" : \"#1c1c1c\",\r\n  },\r\n  \"& .ant-empty-img-5\": {\r\n    fillOpacity: theme.palette.mode === \"light\" ? \"0.8\" : \"0.08\",\r\n    fill: theme.palette.mode === \"light\" ? \"#f5f5f5\" : \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function NoRowIcon() {\r\n  return (\r\n    <StyledGridOverlay>\r\n      <svg\r\n        width=\"120\"\r\n        height=\"100\"\r\n        viewBox=\"0 0 184 152\"\r\n        aria-hidden\r\n        focusable=\"false\"\r\n      >\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <g transform=\"translate(24 31.67)\">\r\n            <ellipse\r\n              className=\"ant-empty-img-5\"\r\n              cx=\"67.797\"\r\n              cy=\"106.89\"\r\n              rx=\"67.797\"\r\n              ry=\"12.668\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-1\"\r\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-2\"\r\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-3\"\r\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\r\n            />\r\n          </g>\r\n          <path\r\n            className=\"ant-empty-img-3\"\r\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n          />\r\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\r\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\r\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\r\n          </g>\r\n        </g>\r\n      </svg>\r\n      <Typography color=\"warning\" sx={{ mt: 1 }}>\r\n        No Row Found\r\n      </Typography>\r\n    </StyledGridOverlay>\r\n  );\r\n}\r\n","import {\r\n  gridPageCountSelector,\r\n  gridPageSelector,\r\n  useGridApiContext,\r\n  useGridSelector,\r\n} from \"@mui/x-data-grid\";\r\n\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport PaginationItem from \"@mui/material/PaginationItem\";\r\n\r\nexport default function CustomPagination() {\r\n  const apiRef = useGridApiContext();\r\n  const page = useGridSelector(apiRef, gridPageSelector);\r\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\r\n\r\n  return (\r\n    <Pagination\r\n      color=\"primary\"\r\n      variant=\"outlined\"\r\n      shape=\"rounded\"\r\n      page={page + 1}\r\n      count={pageCount}\r\n      renderItem={(props2) => <PaginationItem {...props2} disableRipple />}\r\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\r\n    />\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\r\nlet date = new Date();\r\nlet components = [date.getMonth(), date.getYear().toString().substr(-1)];\r\nconst getSchema = (model = {}) => {\r\n  const {\r\n    id = components.join(\"\") + Math.random().toString(36).slice(-2),\r\n    serviceName = \"\",\r\n    basePrice = null,\r\n    expiryDate = 0,\r\n    vatPerUnit = 0,\r\n    discountPerUnit = 0,\r\n    stock = 12,\r\n  } = model;\r\n\r\n  return {\r\n    id,\r\n    serviceName,\r\n    basePrice,\r\n    discountPerUnit,\r\n    expiryDate,\r\n    vatPerUnit,\r\n    stock,\r\n  };\r\n};\r\n\r\nconst validator = Yup.object().shape({\r\n  // firstName: Yup.string().required(\"First Name is required\"),\r\n  // patientAge: Yup.number().required(\"Age is required\"),\r\n  // patientContactNo: Yup.number().required(\"Mobile Number is required\"),\r\n  // gender: Yup.string().required(\"Gender is required\"),\r\n  //middleName: Yup.string().required('Middle Name is required'),\r\n  //lastName: Yup.string().required('Last Name is required'),\r\n  //patientAge: Yup.string().required('Age is required'),\r\n  // customerId : Yup.string(),\r\n  //   active : Yup.string(),\r\n  //   userIp : Yup.string(),\r\n  //   userId : Yup.string(),\r\n  //   orgImage : Yup.string(),\r\n  //   city : Yup.string(),\r\n  //   patientContactNo : Yup.string(),\r\n  //   country : Yup.string(),\r\n  //   currency : Yup.string(),\r\n  //   email : Yup.string(),\r\n  //   fax : Yup.string(),\r\n  //   orgAdd : Yup.string(),\r\n  //   phone : Yup.string(),\r\n  //   signatory : Yup.string(),\r\n  //   state : Yup.string(),\r\n  //   tin : Yup.string(),\r\n  //   url : Yup.string(),\r\n  //   vatRegNo : Yup.string(),\r\n  //   orgName : Yup.string(),\r\n  //   orgDsep : Yup.string(),\r\n  //   centralZId : Yup.string(),\r\n  //   musakno : Yup.string(),\r\n  //   branch : Yup.string(),\r\n  //   central : Yup.string(),\r\n  //   curr : Yup.string(),\r\n  //   madd : Yup.string(),\r\n  //   file : Yup.string(),\r\n  //   zutime : Yup.string(),\r\n  //   xcountry : Yup.string(),\r\n  //   xresource : Yup.string(),\r\n  //   dformat : Yup.string(),\r\n  //   zemail : Yup.string(),\r\n});\r\n\r\nexport { getSchema, validator };\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  FormHelperText,\r\n  Grid,\r\n  InputLabel,\r\n  Stack,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { getSchema, validator } from \"./Schema\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { callApi } from \"../../reducers/apiSlice\";\r\nimport { CloseCircleFilled } from \"@ant-design/icons\";\r\n\r\nconst AddProduct = ({ setOpen }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const CloseButton = () => {\r\n    return (\r\n      <IconButton\r\n        onClick={() => setOpen(false)}\r\n        sx={{ position: \"absolute\", right: 15, top: 15 }}\r\n      >\r\n        <CloseCircleFilled style={{ fontSize: \"20px\" }} />\r\n      </IconButton>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={getSchema({})}\r\n        enableReinitialize\r\n        validationSchema={validator}\r\n        onSubmit={(values) => {\r\n          dispatch(\r\n            callApi({\r\n              operationId: \"api/products\",\r\n              output: \"itemSaved\",\r\n              parameters: {\r\n                method: \"POST\",\r\n                body: JSON.stringify(getSchema(values)),\r\n              },\r\n            })\r\n          );\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={2} sx={{ maxWidth: 600, p: 2 }}>\r\n              <CloseButton />\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"primary\"\r\n                  sx={{ display: \"block\" }}\r\n                >\r\n                  ADD PRODUCT / SERVICE\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={2} sm={2}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>ID</InputLabel>\r\n                  <TextField\r\n                    autoFocus={true}\r\n                    id=\"id\"\r\n                    name=\"id\"\r\n                    placeholder=\"Enter name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.id}\r\n                    fullWidth\r\n                  />\r\n                  {touched.id && errors.id && (\r\n                    <FormHelperText error>{errors.id}</FormHelperText>\r\n                  )}\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item xs={8} sm={6}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>Product/service name</InputLabel>\r\n                  <TextField\r\n                    autoFocus={true}\r\n                    id=\"serviceName\"\r\n                    name=\"serviceName\"\r\n                    placeholder=\"Enter name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.serviceName}\r\n                    fullWidth\r\n                  />\r\n                  {touched.serviceName && errors.serviceName && (\r\n                    <FormHelperText error>{errors.serviceName}</FormHelperText>\r\n                  )}\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>BASE PRICE</InputLabel>\r\n                  <TextField\r\n                    id=\"basePrice\"\r\n                    name=\"basePrice\"\r\n                    placeholder=\"Enter Age\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.basePrice}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                  />\r\n                  {touched.basePrice && errors.basePrice && (\r\n                    <FormHelperText error>{errors.basePrice}</FormHelperText>\r\n                  )}\r\n                </Stack>\r\n              </Grid>\r\n\r\n              <Grid item xs={4} md={4}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>Discount Per Unit</InputLabel>\r\n                  <TextField\r\n                    id=\"discountPerUnit\"\r\n                    name=\"discountPerUnit\"\r\n                    placeholder=\"Discount Per Unit\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.discountPerUnit}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                  />\r\n                  {touched.discountPerUnit && errors.discountPerUnit && (\r\n                    <FormHelperText error>\r\n                      {errors.discountPerUnit}\r\n                    </FormHelperText>\r\n                  )}\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>AVAILABLE STOCKS</InputLabel>\r\n                  <TextField\r\n                    id=\"stock\"\r\n                    name=\"stock\"\r\n                    placeholder=\"Enter available Stock\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.stock}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                  />\r\n                  {touched.stock && errors.stock && (\r\n                    <FormHelperText error>{errors.stock}</FormHelperText>\r\n                  )}\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>Expiry Date</InputLabel>\r\n                  <TextField\r\n                    id=\"expiryDate\"\r\n                    name=\"expiryDate\"\r\n                    placeholder=\"Enter Age\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.expiryDate}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                  />\r\n                  {touched.expiryDate && errors.expiryDate && (\r\n                    <FormHelperText error>{errors.expiryDate}</FormHelperText>\r\n                  )}\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>Vat Per Unit</InputLabel>\r\n                  <TextField\r\n                    id=\"vatPerUnit\"\r\n                    name=\"vatPerUnit\"\r\n                    placeholder=\"Enter Age\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.vatPerUnit}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                  />\r\n                  {touched.vatPerUnit && errors.vatPerUnit && (\r\n                    <FormHelperText error>{errors.vatPerUnit}</FormHelperText>\r\n                  )}\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"info\"\r\n                  fullWidth\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","import { DeleteOutlined } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { callApi } from \"../../reducers/apiSlice\";\r\n\r\nconst DeleteProduct = ({ shouldDelete }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <IconButton\r\n      color=\"error\"\r\n      onClick={() =>\r\n        dispatch(\r\n          callApi({\r\n            operationId: `api/products/${shouldDelete}`,\r\n            output: \"itemDeleted\",\r\n            parameters: {\r\n              method: \"DELETE\",\r\n            },\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <DeleteOutlined />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default DeleteProduct;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Button, Stack, Dialog, Paper } from \"@mui/material\";\r\nimport { DataGrid, gridClasses } from \"@mui/x-data-grid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { callApi, selectApi } from \"../../reducers/apiSlice\";\r\nimport { addToCart } from \"../../reducers/cartSlice\";\r\nimport AddProduct from \"./AddProduct\";\r\nimport DeleteProduct from \"./DeleteProduct\";\r\nimport NoRowIcon from \"../../components/NoRowIcon\";\r\nimport CustomPagination from \"../../components/Pagination\";\r\n\r\nconst Products = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    items = {\r\n      data: [],\r\n    },\r\n    itemDeleted = {\r\n      data: {\r\n        id: null,\r\n      },\r\n    },\r\n    itemSaved,\r\n  } = useSelector(selectApi);\r\n  \r\n  useEffect(\r\n    () =>\r\n      dispatch(\r\n        callApi({\r\n          operationId: `api/products`,\r\n          output: \"items\",\r\n        })\r\n      ),\r\n    [itemDeleted.data.id, itemSaved]\r\n  );\r\n  const columns = [\r\n    {\r\n      field: \"id\",\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-2\",\r\n      headerName: \"CODE\",\r\n      width: 70,\r\n      align: \"left\",\r\n      sortable: false,\r\n      headerAlign: \"left\",\r\n    },\r\n    {\r\n      field: \"serviceName\",\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-3\",\r\n      headerName: \"SERVICE NAME\",\r\n      flex: 1,\r\n      headerAlign: \"left\",\r\n      sortable: false,\r\n    },\r\n    {\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-2\",\r\n      field: \"basePrice\",\r\n      headerName: \"PRICE\",\r\n      type: \"number\",\r\n      minWidth: 120,\r\n      headerAlign: \"center\",\r\n      sortable: false,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-3\",\r\n      field: \"discountPerUnit\",\r\n      headerName: \"DISCOUNT\",\r\n      type: \"number\",\r\n      minWidth: 120,\r\n      headerAlign: \"center\",\r\n      sortable: false,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-2\",\r\n      field: \"vatPerUnit\",\r\n      headerName: \"VAT PER UNIT\",\r\n      type: \"number\",\r\n      minWidth: 120,\r\n      headerAlign: \"center\",\r\n      sortable: false,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-3\",\r\n      field: \"expiryDate\",\r\n      headerName: \"EXPIRY DATE\",\r\n      type: \"number\",\r\n      minWidth: 120,\r\n      headerAlign: \"center\",\r\n      sortable: false,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      minWidth: 120,\r\n      align: \"center\",\r\n      field: \"actions\",\r\n      headerName: \"ACTION\",\r\n      type: \"actions\",\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-2\",\r\n      renderCell: (params) => <DeleteProduct shouldDelete={params.id} />,\r\n    },\r\n  ];\r\n  const [selectedOptions, setSelectedOptions] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleadd = () => {\r\n    let SelectedOptions = items.data.filter(\r\n      (el) => selectedOptions.indexOf(el.id) + 1\r\n    );\r\n\r\n    return SelectedOptions.forEach((el) =>\r\n      dispatch(\r\n        addToCart({\r\n          ...el,\r\n          discountPerUnit: 0,\r\n          expiryDate: 0,\r\n          vatPerUnit: 0,\r\n          discountPerUnit: 0,\r\n          quantityOrdered: 1,\r\n          quantityReturned: 0,\r\n          discountTotal: 0,\r\n          discountReturned: 0,\r\n          vatTotal: 0,\r\n          vatReturned: 0,\r\n          subtotalOrdered: 0,\r\n          subtotalReturned: 0,\r\n          rowTotal: 0,\r\n          returnedBy: \"string\",\r\n          returnDate: \"2022-11-13T11:35:33.765Z\",\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={1} sx={{ width: \"100%\", bgcolor: \"#f5f9f0\" }}>\r\n      <Stack direction=\"row\">\r\n        <Button\r\n          sx={{ m: 2, width: 200 }}\r\n          variant=\"contained\"\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          Add New service\r\n        </Button>\r\n        <Button\r\n          sx={{ m: 2, ml: 0, width: 200 }}\r\n          disabled={selectedOptions.length == 0}\r\n          variant=\"contained\"\r\n          color=\"warning\"\r\n          onClick={() => handleadd()}\r\n        >\r\n          {selectedOptions.length ? \"Add to New bill\" : \"Select services\"}\r\n        </Button>\r\n        <Dialog open={open} onClose={() => setOpen(!open)}>\r\n          <AddProduct setOpen={setOpen} />\r\n        </Dialog>\r\n      </Stack>\r\n      <DataGrid\r\n        sx={{ height: 400 }}\r\n        getRowId={(row) => row._id}\r\n        checkboxSelection={true}\r\n        rows={items.data}\r\n        columns={columns}\r\n        // pageSize={5}\r\n        disableSelectionOnClick\r\n        disableColumnSelector\r\n        components={{\r\n          NoRowsOverlay: NoRowIcon,\r\n          Pagination: CustomPagination,\r\n        }}\r\n        headerHeight={55}\r\n        hideFooterPagination\r\n        disableColumnMenu\r\n        density=\"compact\"\r\n        showCellRightBorder={true}\r\n        showColumnRightBorder={true}\r\n        onSelectionModelChange={(newSelectionModel) => {\r\n          setSelectedOptions(newSelectionModel);\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["StyledGridOverlay","styled","theme","display","flexDirection","alignItems","justifyContent","height","fill","palette","mode","fillOpacity","NoRowIcon","width","viewBox","focusable","fillRule","transform","className","cx","cy","rx","ry","d","color","sx","mt","CustomPagination","apiRef","useGridApiContext","page","useGridSelector","gridPageSelector","pageCount","gridPageCountSelector","variant","shape","count","renderItem","props2","disableRipple","onChange","event","value","current","setPage","date","Date","components","getMonth","getYear","toString","substr","getSchema","model","id","join","Math","random","slice","serviceName","basePrice","expiryDate","vatPerUnit","discountPerUnit","stock","validator","Yup","setOpen","dispatch","useDispatch","CloseButton","IconButton","onClick","position","right","top","CloseCircleFilled","style","fontSize","initialValues","enableReinitialize","validationSchema","onSubmit","values","callApi","operationId","output","parameters","method","body","JSON","stringify","errors","touched","handleChange","handleBlur","handleSubmit","Grid","container","spacing","maxWidth","p","item","xs","sm","Typography","Stack","InputLabel","TextField","autoFocus","name","placeholder","onBlur","fullWidth","FormHelperText","error","md","type","Button","shouldDelete","DeleteOutlined","useSelector","selectApi","items","data","itemDeleted","itemSaved","useEffect","columns","field","headerClassName","cellClassName","headerName","align","sortable","headerAlign","flex","minWidth","renderCell","params","React","selectedOptions","setSelectedOptions","open","Paper","elevation","bgcolor","direction","m","ml","disabled","length","filter","el","indexOf","forEach","addToCart","Dialog","onClose","AddProduct","DataGrid","getRowId","row","_id","checkboxSelection","rows","disableSelectionOnClick","disableColumnSelector","NoRowsOverlay","Pagination","headerHeight","hideFooterPagination","disableColumnMenu","density","showCellRightBorder","showColumnRightBorder","onSelectionModelChange","newSelectionModel"],"sourceRoot":""}