{"version":3,"file":"static/js/976.07c23658.chunk.js","mappings":"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","sources":["components/NoRowIcon.js","components/Pagination.js","pages/customers/Schema.js","pages/customers/AddCustomer.js","pages/customers/DeleteCustomer.js","pages/customers/Customers.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst StyledGridOverlay = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  height: \"100%\",\r\n  \"& .ant-empty-img-1\": {\r\n    fill: theme.palette.mode === \"light\" ? \"#aeb8c2\" : \"#262626\",\r\n  },\r\n  \"& .ant-empty-img-2\": {\r\n    fill: theme.palette.mode === \"light\" ? \"#f5f5f7\" : \"#595959\",\r\n  },\r\n  \"& .ant-empty-img-3\": {\r\n    fill: theme.palette.mode === \"light\" ? \"#dce0e6\" : \"#434343\",\r\n  },\r\n  \"& .ant-empty-img-4\": {\r\n    fill: theme.palette.mode === \"light\" ? \"#fff\" : \"#1c1c1c\",\r\n  },\r\n  \"& .ant-empty-img-5\": {\r\n    fillOpacity: theme.palette.mode === \"light\" ? \"0.8\" : \"0.08\",\r\n    fill: theme.palette.mode === \"light\" ? \"#f5f5f5\" : \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function NoRowIcon() {\r\n  return (\r\n    <StyledGridOverlay>\r\n      <svg\r\n        width=\"120\"\r\n        height=\"100\"\r\n        viewBox=\"0 0 184 152\"\r\n        aria-hidden\r\n        focusable=\"false\"\r\n      >\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <g transform=\"translate(24 31.67)\">\r\n            <ellipse\r\n              className=\"ant-empty-img-5\"\r\n              cx=\"67.797\"\r\n              cy=\"106.89\"\r\n              rx=\"67.797\"\r\n              ry=\"12.668\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-1\"\r\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-2\"\r\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n            />\r\n            <path\r\n              className=\"ant-empty-img-3\"\r\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\r\n            />\r\n          </g>\r\n          <path\r\n            className=\"ant-empty-img-3\"\r\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n          />\r\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\r\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\r\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\r\n          </g>\r\n        </g>\r\n      </svg>\r\n      <Typography color=\"warning\" sx={{ mt: 1 }}>\r\n        No Row Found\r\n      </Typography>\r\n    </StyledGridOverlay>\r\n  );\r\n}\r\n","import {\r\n  gridPageCountSelector,\r\n  gridPageSelector,\r\n  useGridApiContext,\r\n  useGridSelector,\r\n} from \"@mui/x-data-grid\";\r\n\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport PaginationItem from \"@mui/material/PaginationItem\";\r\n\r\nexport default function CustomPagination() {\r\n  const apiRef = useGridApiContext();\r\n  const page = useGridSelector(apiRef, gridPageSelector);\r\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\r\n\r\n  return (\r\n    <Pagination\r\n      color=\"primary\"\r\n      variant=\"outlined\"\r\n      shape=\"rounded\"\r\n      page={page + 1}\r\n      count={pageCount}\r\n      renderItem={(props2) => <PaginationItem {...props2} disableRipple />}\r\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\r\n    />\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\r\nconst getSchema = (model = {}) => {\r\n  let date = new Date();\r\n  let components = [date.getHours(), date.getMinutes().toString()];\r\n  const {\r\n    id = Math.random().toString(36).slice(-2) + components.join(\"\"),\r\n    name = \"\",\r\n    age = 21,\r\n    contactNumber = \"\",\r\n    gender = \"MALE\",\r\n  } = model;\r\n\r\n  return {\r\n    id,\r\n    name,\r\n    gender,\r\n    age,\r\n    contactNumber,\r\n  };\r\n};\r\n\r\nconst validator = Yup.object().shape({\r\n  id: Yup.string().required(\"Required\"),\r\n  name: Yup.string().required(\"Required\"),\r\n  gender: Yup.string().required(\"Required\"),\r\n  age: Yup.number().required(\"Required\"),\r\n  contactNumber: Yup.string().required(\"Required\"),\r\n});\r\n\r\nexport { getSchema, validator };\r\n","import React, { useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  Stack,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { getSchema, validator } from \"./Schema\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { callApi, clearState, selectApi } from \"../../reducers/apiSlice\";\r\nimport { CloseCircleFilled } from \"@ant-design/icons\";\r\n\r\nconst AddCustomer = ({ setOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const CloseButton = () => {\r\n    return (\r\n      <IconButton\r\n        onClick={() => setOpen(false)}\r\n        sx={{ position: \"absolute\", right: 15, top: 15 }}\r\n      >\r\n        <CloseCircleFilled style={{ fontSize: \"20px\" }} />\r\n      </IconButton>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={getSchema({})}\r\n        enableReinitialize\r\n        validationSchema={validator}\r\n        onSubmit={(values) => {\r\n          dispatch(\r\n            callApi({\r\n              operationId: \"api/customers\",\r\n              output: \"customerSaved\",\r\n              parameters: {\r\n                method: \"POST\",\r\n                body: JSON.stringify(getSchema(values)),\r\n              },\r\n            })\r\n          );\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleBlur, handleSubmit }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={2} sx={{ p: 2 }}>\r\n              <CloseButton />\r\n              <Grid item lg={2}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>Id</InputLabel>\r\n                  <TextField\r\n                    id=\"id\"\r\n                    name=\"id\"\r\n                    placeholder=\"ID\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.id}\r\n                    fullWidth\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item lg={3}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>Name</InputLabel>\r\n                  <TextField\r\n                    autoFocus={true}\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"FULL NAME\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                    fullWidth\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item lg={1}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>Gender</InputLabel>\r\n                  <TextField\r\n                    id=\"gender\"\r\n                    name=\"gender\"\r\n                    placeholder=\"GENDER\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.gender}\r\n                    fullWidth\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item lg={1}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>AGe</InputLabel>\r\n                  <TextField\r\n                    id=\"age\"\r\n                    name=\"age\"\r\n                    placeholder=\"AGE\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.age}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item lg={2}>\r\n                <Stack spacing={0.5}>\r\n                  <InputLabel>Contact Number</InputLabel>\r\n                  <TextField\r\n                    id=\"contactNumber\"\r\n                    name=\"contactNumber\"\r\n                    placeholder=\"MOBILE NUMBER\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.contactNumber}\r\n                    fullWidth\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item lg={2}>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-end\"\r\n                  sx={{ height: \"100%\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"info\" type=\"submit\">\r\n                    SAVE\r\n                  </Button>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCustomer;\r\n","import { DeleteOutlined } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { callApi, selectApi } from \"../../reducers/apiSlice\";\r\n\r\nconst DeleteProduct = ({ shouldDelete }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector(selectApi);\r\n  return (\r\n    <IconButton\r\n      disabled={loading}\r\n      color=\"error\"\r\n      onClick={() =>\r\n        dispatch(\r\n          callApi({\r\n            operationId: `api/customers/${shouldDelete}`,\r\n            output: \"customerDeleted\",\r\n            parameters: {\r\n              method: \"DELETE\",\r\n            },\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <DeleteOutlined />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default DeleteProduct;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Stack,\r\n  Dialog,\r\n  Typography,\r\n  Badge,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { callApi, selectApi } from \"../../reducers/apiSlice\";\r\nimport { addToCart } from \"../../reducers/cartSlice\";\r\nimport AddCustomer from \"./AddCustomer\";\r\nimport DeleteCustomer from \"./DeleteCustomer\";\r\nimport NoRowIcon from \"../../components/NoRowIcon\";\r\nimport CustomPagination from \"../../components/Pagination\";\r\n\r\nconst Customers = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    loading,\r\n    customers = {\r\n      data: [],\r\n    },\r\n    customerDeleted = {\r\n      data: { id: null },\r\n    },\r\n    customerSaved,\r\n  } = useSelector(selectApi);\r\n  useEffect(\r\n    () =>\r\n      dispatch(\r\n        callApi({\r\n          operationId: `api/customers`,\r\n          output: \"customers\",\r\n        })\r\n      ),\r\n\r\n    [customerDeleted.data.id, customerSaved]\r\n  );\r\n  const columns = [\r\n    {\r\n      field: \"id\",\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-2\",\r\n      headerName: \"CODE\",\r\n      width: 70,\r\n      align: \"left\",\r\n      sortable: false,\r\n      headerAlign: \"left\",\r\n    },\r\n    {\r\n      field: \"name\",\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-3\",\r\n      headerName: \"CLIENT NAME\",\r\n      flex: 1,\r\n      headerAlign: \"left\",\r\n      sortable: false,\r\n    },\r\n    {\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-2\",\r\n      field: \"age\",\r\n      headerName: \"AGE\",\r\n      type: \"number\",\r\n      minWidth: 60,\r\n      headerAlign: \"center\",\r\n      sortable: false,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-3\",\r\n      field: \"contactNumber\",\r\n      headerName: \"CONTACT\",\r\n      type: \"text\",\r\n      minWidth: 120,\r\n      headerAlign: \"center\",\r\n      sortable: false,\r\n      align: \"left\",\r\n    },\r\n    {\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-2\",\r\n      field: \"gender\",\r\n      headerName: \"GENDER\",\r\n      type: \"text\",\r\n      minWidth: 120,\r\n      headerAlign: \"center\",\r\n      sortable: false,\r\n      align: \"center\",\r\n      renderCell: (params) => (\r\n        <Box\r\n          sx={{\r\n            m: 1,\r\n            pr: 1,\r\n            pl: 1,\r\n            bgcolor: \"primary.main\",\r\n            color: \"white\",\r\n            borderRadius: 5,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {params.value.toUpperCase()}\r\n        </Box>\r\n      ),\r\n    },\r\n\r\n    {\r\n      minWidth: 120,\r\n      align: \"center\",\r\n      field: \"actions\",\r\n      headerName: \"ACTION\",\r\n      type: \"actions\",\r\n      headerClassName: \"top-header-1\",\r\n      cellClassName: \"top-header-3\",\r\n      renderCell: (params) => <DeleteCustomer shouldDelete={params.id} />,\r\n    },\r\n  ];\r\n  const [selectedOptions, setSelectedOptions] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleadd = () => {\r\n    let SelectedOptions = customers.data.filter(\r\n      (el) => selectedOptions.indexOf(el.id) + 1\r\n    );\r\n\r\n    return SelectedOptions.forEach((el) =>\r\n      dispatch(\r\n        addToCart({\r\n          ...el,\r\n          contactNumber: 0,\r\n          expiryDate: 0,\r\n          vatPerUnit: 0,\r\n          discountPerUnit: 0,\r\n          quantityOrdered: 1,\r\n          quantityReturned: 0,\r\n          discountTotal: 0,\r\n          discountReturned: 0,\r\n          vatTotal: 0,\r\n          vatReturned: 0,\r\n          subtotalOrdered: 0,\r\n          subtotalReturned: 0,\r\n          rowTotal: 0,\r\n          returnedBy: \"string\",\r\n          returnDate: \"2022-11-13T11:35:33.765Z\",\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      elevation={1}\r\n      sx={{ pt: 2, pb: 2, width: \"100%\", bgcolor: \"#f5f9f0\" }}\r\n    >\r\n      <Stack direction=\"row\">\r\n        <Button\r\n          sx={{ mb: 2, ml: 2, flex: 0.0625, minWidth: \"140px\" }}\r\n          variant=\"contained\"\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          New Customer\r\n        </Button>\r\n        <Button\r\n          sx={{ mb: 2, ml: 2, flex: 0.0625, minWidth: \"160px\" }}\r\n          disabled={selectedOptions.length !== 1}\r\n          variant=\"contained\"\r\n          color=\"warning\"\r\n          onClick={() => handleadd()}\r\n        >\r\n          {selectedOptions.length ? \"Bill to customer\" : \"Select Customer\"}\r\n        </Button>\r\n        <Dialog open={open} onClose={() => setOpen(!open)}>\r\n          <AddCustomer setOpen={setOpen} />\r\n        </Dialog>\r\n      </Stack>\r\n      <DataGrid\r\n        sx={{ mr: 2, ml: 2, height: 400, borderRadius: 0, border: 0 }}\r\n        getRowId={(row) => row._id}\r\n        checkboxSelection={true}\r\n        rows={customers.data}\r\n        columns={columns}\r\n        pageSize={10}\r\n        disableSelectionOnClick\r\n        disableColumnSelector\r\n        components={{\r\n          NoRowsOverlay: NoRowIcon,\r\n          Pagination: CustomPagination,\r\n        }}\r\n        headerHeight={55}\r\n        disableColumnMenu\r\n        density=\"compact\"\r\n        showCellRightBorder={true}\r\n        showColumnRightBorder={true}\r\n        onSelectionModelChange={(newSelectionModel) => {\r\n          setSelectedOptions(newSelectionModel);\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n"],"names":["StyledGridOverlay","styled","theme","display","flexDirection","alignItems","justifyContent","height","fill","palette","mode","fillOpacity","NoRowIcon","width","viewBox","focusable","fillRule","transform","className","cx","cy","rx","ry","d","color","sx","mt","CustomPagination","apiRef","useGridApiContext","page","useGridSelector","gridPageSelector","pageCount","gridPageCountSelector","variant","shape","count","renderItem","props2","disableRipple","onChange","event","value","current","setPage","getSchema","model","date","Date","components","getHours","getMinutes","toString","id","Math","random","slice","join","name","age","contactNumber","gender","validator","Yup","required","setOpen","dispatch","useDispatch","CloseButton","IconButton","onClick","position","right","top","CloseCircleFilled","style","fontSize","initialValues","enableReinitialize","validationSchema","onSubmit","values","callApi","operationId","output","parameters","method","body","JSON","stringify","handleChange","handleBlur","handleSubmit","Grid","container","spacing","p","item","lg","Stack","InputLabel","TextField","placeholder","onBlur","fullWidth","autoFocus","type","direction","Button","shouldDelete","loading","useSelector","selectApi","disabled","DeleteOutlined","customers","data","customerDeleted","customerSaved","useEffect","columns","field","headerClassName","cellClassName","headerName","align","sortable","headerAlign","flex","minWidth","renderCell","params","Box","m","pr","pl","bgcolor","borderRadius","toUpperCase","DeleteCustomer","React","selectedOptions","setSelectedOptions","open","Paper","elevation","pt","pb","mb","ml","length","filter","el","indexOf","forEach","addToCart","expiryDate","vatPerUnit","discountPerUnit","quantityOrdered","quantityReturned","discountTotal","discountReturned","vatTotal","vatReturned","subtotalOrdered","subtotalReturned","rowTotal","returnedBy","returnDate","Dialog","onClose","DataGrid","mr","border","getRowId","row","_id","checkboxSelection","rows","pageSize","disableSelectionOnClick","disableColumnSelector","NoRowsOverlay","Pagination","headerHeight","disableColumnMenu","density","showCellRightBorder","showColumnRightBorder","onSelectionModelChange","newSelectionModel"],"sourceRoot":""}